# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:8.0-node-browsers
        environment:
          APP_DEBUG: true
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_DATABASE: test_db
          DB_USERNAME: root

      - image: circleci/mysql:8.0-ram
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: test_db

    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip
      - run: sudo docker-php-ext-install pdo_mysql

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "./backend/composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist --working-dir=./backend

      - save_cache:
          key: v1-dependencies-{{ checksum "./backend/composer.json" }}
          paths:
            - ./backend/vender
      - restore_cache:
          keys:
            - node-v1-{{ checksum "./backend/package.json" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "./backend/package.json" }}
          paths:
            - node_modules

      - run:
          working_directory: backend
          command: |
            echo "APP_KEY=" > .env.testing
            php artisan key:generate
            php artisan migrate --seed --force

      - run: ./backend/vendor/bin/phpunit